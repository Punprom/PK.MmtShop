// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PK.MmtShop.Service.Context;

namespace PK.MmtShop.Service.Migrations
{
    [DbContext(typeof(MmtDbContext))]
    [Migration("20210831150950_SeedingProducts")]
    partial class SeedingProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PK.MmtShop.Service.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Home"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fitness"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("PK.MmtShop.Service.Entities.CategoryRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SkuRange")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryRange");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            SkuRange = 10000
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            SkuRange = 20000
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            SkuRange = 30000
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            SkuRange = 40000
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            SkuRange = 50000
                        });
                });

            modelBuilder.Entity("PK.MmtShop.Service.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sku")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e20bd6a-4140-4cd6-b3af-b7f3501c0a8f"),
                            CategoryId = 1,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 45, DateTimeKind.Local).AddTicks(3400),
                            Description = "Princess 10-Piece Accessory Set for Princes 3.2L Aero-fryer XL",
                            Name = "Princess Fat fryer",
                            Price = 26.30m,
                            Sku = 10001
                        },
                        new
                        {
                            Id = new Guid("f8ec3ba2-50e8-4a1d-89a6-ddba4657ebb8"),
                            CategoryId = 1,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3871),
                            Description = "Russell Hobbs Powersteam Ultra 3100 W Vertical Steam Iron 20630 - Black and Grey",
                            Name = "Russell Hobbs Power-steam Ultra 3100 W Vertical Steam Iron",
                            Price = 39.95m,
                            Sku = 10002
                        },
                        new
                        {
                            Id = new Guid("5ad7407f-6d93-46c2-8f75-65d90f88b7a5"),
                            CategoryId = 2,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3896),
                            Description = "Bosch 06008B9B72 Cordless Lawnmower EasyRotak 36-550 (36 Volt, 2 x Battery 2.0 Ah , Cutting Width: 37 cm, Lawns up to 550 m2, in Carton Packaging)",
                            Name = "Bosch 06008B9B72 Cordless Lawnmower",
                            Price = 237.15m,
                            Sku = 20001
                        },
                        new
                        {
                            Id = new Guid("1724c3f2-224a-4528-8c47-4da8fc06d4ab"),
                            CategoryId = 2,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3902),
                            Description = "Expandable Garden Hose, Upgraded 3-Layer Latex Hose Pipe, Solid Brass Connectors, Durable 3450D Weave, No-Kink Flexible Water Hose, 10 Function Spray 75FT/22.5M",
                            Name = "Expandable Garden Host",
                            Price = 34.69m,
                            Sku = 20002
                        },
                        new
                        {
                            Id = new Guid("8ebe6884-cdb4-4800-8397-c0c37189be40"),
                            CategoryId = 3,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3906),
                            Description = "CD Radio Portable CD Player Boombox with Bluetooth,FM Radio,CD-MP3/CD-R/CD-RW Compatible, USB Port, AUX Input,Headphone Output,AC/DC Operated (Gray)",
                            Name = "Boombox CD Radio Portable",
                            Price = 41.99m,
                            Sku = 30001
                        },
                        new
                        {
                            Id = new Guid("77f5e8cc-7bc7-4437-af7b-32f22dd952ca"),
                            CategoryId = 3,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3911),
                            Description = "SanDisk Extreme PRO 128GB SDXC Memory Card up to 170MB/s, UHS-1, Class 10, U3, V30",
                            Name = "Scandisk Extreme Pro 128GB",
                            Price = 24.99m,
                            Sku = 30002
                        },
                        new
                        {
                            Id = new Guid("2b40208b-9b4e-442f-ab30-18ffaa838498"),
                            CategoryId = 4,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3914),
                            Description = "Outdoor casual shoe with breathability, traction and comfort, Cushioned midsole for comfortable all-day wear",
                            Name = "Columbia Men's Woodburn II Walking Shoe",
                            Price = 43.20m,
                            Sku = 40001
                        },
                        new
                        {
                            Id = new Guid("5c3b5aa5-2320-4f41-a5b4-a798cf10e4a7"),
                            CategoryId = 4,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3917),
                            Description = "Uneek Mens Classic Plain Pullover Hooded Sweatshirt Hoodie Sweater (22 Colours)",
                            Name = "Uneek Mens Classic Plain Pullover",
                            Price = 8.56m,
                            Sku = 40002
                        },
                        new
                        {
                            Id = new Guid("adcdb34f-8fbc-4142-a500-3e881e5bd2b9"),
                            CategoryId = 5,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3920),
                            Description = "LEGO 76389 Harry Potter Hogwarts Chamber of Secrets Modular Castle Toy with The Great Hall, 20th Anniversary Set with Collectible Golden Minifigure",
                            Name = "LEGO 76389 Harry Potter Hogwarts Chamber of Secrets",
                            Price = 108m,
                            Sku = 50001
                        },
                        new
                        {
                            Id = new Guid("c1a028a4-ddc1-43be-a046-be93e6fd8a38"),
                            CategoryId = 5,
                            Created = new DateTime(2021, 8, 31, 16, 9, 50, 47, DateTimeKind.Local).AddTicks(3931),
                            Description = "Introducing the Xbox Series S, the smallest, sleekest Xbox console ever. Experience the speed and performance of a next-gen all-digital console at an accessible price point",
                            Name = "Xbox Series S",
                            Price = 249m,
                            Sku = 50002
                        });
                });

            modelBuilder.Entity("PK.MmtShop.Service.Entities.CategoryRange", b =>
                {
                    b.HasOne("PK.MmtShop.Service.Entities.Category", "Category")
                        .WithMany("CategoryRanges")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PK.MmtShop.Service.Entities.Product", b =>
                {
                    b.HasOne("PK.MmtShop.Service.Entities.Category", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("PK.MmtShop.Service.Entities.Category", b =>
                {
                    b.Navigation("CategoryRanges");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
